# on:
#   push:
#     branches:
#         # - feature1
#         # - feature_2
#         - feature_3
        
#   # pull_request:
#   #   branches:
#   #      # - feature1
#   #      # - feature_2

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     strategy:
#       matrix:
#           python-version: ["3.9"]

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version}}
          
#       - name: Display Python version
#         run: python -c "import sys; print(sys.version)"

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip setuptools wheel
#           pip install -r requirements.txt

#       - name: Test with pytest
#         run: |
#           pip install pytest pytest-cov coverage
#           pytest test_func_app.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      
#       - name: Upload pytest test results
#         uses: actions/upload-artifact@v4
#         with:
#           name: pytest-results-${{ matrix.python-version }}
#           path: junit/test-results-${{ matrix.python-version }}.xml
#         if: ${{ always() }}
#         #Use always() to always run this step to publish test results when there are test failures

#       # - name: Check coverage
#       #   run: |
#       #     COVERAGE=$(coverage report --fail-under=80)
#       #     if [ $? -ne 0 ]; then
#       #      echo "Coverage below 80%: $COVERAGE"
#       #      exit 1
#       #     fi

#       - name: Lint code with ruff         
#         run: |
#           pip install ruff
#           ruff check --output-format=github .
#         ## continue-on-error: true
        