on:
  push:
    branches:
      - main
      # - feature1
        # - feature_2
          

  # pull_request:
  #   branches:
  #      # - feature1
  #      # - feature_2

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest pytest-cov
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fieldanalytics_whl
          path: dist/*.whl
          overwrite: 'true'

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: function_app
      #     path: |
      #       release.zip
      #       !venv/

      # - name: Code Quality and Lint
      #   uses: ricardochaves/python-lint@v1.4.0

      - name: Build Coverage File
        run: pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app test/ | tee pytest-coverage.txt

      # - name: Pytest Coverage Comment
      #   id: coverageComment
      #   uses: MishaKav/pytest-coverage-comment@main
      #   with:
      #       pytest-coverage-path: ./pytest-coverage.txt
      #       junitxml-path: ./pytest.xml

 

  # Test_with_Pytest:
  #   runs-on: ubuntu-latest
            
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #        python-version: '3.9'
          
  #     - name: Display Python version
  #       run: python -c "import sys; print(sys.version)"
        
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt

  #     - name: Test with pytest
  #       run: |
  #         pip install pytest pytest-cov coverage
  #         pytest test_func_app.py --doctest-modules --junitxml=junit/test-results-3.9.xml
      
  #     - name: Upload pytest test results
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: pytest-results-3.9
  #         path: junit/test-results-3.9.xml
  #       if: ${{ always() }}
        #Use always() to always run this step to publish test results when there are test failures

      # - name: Check coverage
      #   run: |
      #     COVERAGE=$(coverage report --fail-under=80)
      #     if [ $? -ne 0 ]; then
      #      echo "Coverage below 80%: $COVERAGE"
      #      exit 1
      #     fi

  # Lint_with_Ruff:
  #   runs-on: label-1
                
  #   steps:
  #     - name: Lint code with ruff         
  #       run: |
  #         pip install ruff
  #         ruff check --output-format=github .
        ##### continue-on-error: true
